<Application x:Class="Program.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="3,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="#FFC1C1C1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,0,0,32"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="Add">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="SetLang">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Width" Value="50"/>
        </Style>
        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" x:Key="TopRightCorner">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="#FFF0F0F0"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="0,2"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="27"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderThickness="0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Background" Value="#FFDC0E0E"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Background" Value="#FFDC0E0E"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MultiSelectComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="MainGrid" Width="162" Height="22">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup
                                AllowsTransparency="True"
                                IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                Margin="1"
                                x:Name="PART_Popup"
                                Grid.ColumnSpan="2">
                                <Border x:Name="DropDownBorder"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}">
                                    <ScrollViewer MaxHeight="200" CanContentScroll="True">
                                        <ListBox x:Name="lstBox"
                                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                 KeyboardNavigation.DirectionalNavigation="Contained"
                                                 SelectionMode="Multiple"
                                                 ItemsSource="{TemplateBinding ItemsSource}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="tgButton" Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          Grid.ColumnSpan="2"
                                          IsChecked="{Binding Path=IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ItemsControl IsHitTestVisible="False"
                                          ItemsSource="{Binding Path=SelectedItems, ElementName=lstBox}"
                                          Margin="4,0,0,0" >
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel VerticalAlignment="Center" IsItemsHost="True" Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="commaTextBlock" Text=", "/>
                                            <TextBlock Text="{Binding .}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}"
                                                         Value="{x:Null}">
                                                <Setter Property="Visibility" TargetName="commaTextBlock" Value="Collapsed"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
    </Application.Resources>
</Application>
